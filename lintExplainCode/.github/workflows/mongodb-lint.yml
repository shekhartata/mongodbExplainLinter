name: MongoDB Performance Lint

on:
  pull_request:
    branches: [ main, develop, master ]
  push:
    branches: [ main, develop, master ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  mongodb-lint:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for diff analysis
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Generate PR diff
      if: github.event_name == 'pull_request'
      id: diff
      run: |
        # Generate diff between PR branch and base branch
        git diff origin/${{ github.base_ref }}...HEAD > pr_diff.diff
        echo "diff_file=pr_diff.diff" >> $GITHUB_OUTPUT
        echo "PR diff generated with $(wc -l < pr_diff.diff) lines"
    
    - name: Run MongoDB PR analysis
      if: github.event_name == 'pull_request'
      env:
        MONGO_CONNECTION_STRING: ${{ secrets.MONGO_CONNECTION_STRING }}
        MONGO_DATABASE: ${{ secrets.MONGO_DATABASE }}
        MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
        MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
        CI_MODE: true
        PR_NUMBER: ${{ github.event.number }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPO: ${{ github.repository }}
      run: |
        python cli.py ci-analyze-pr --pr-diff pr_diff.diff --base-path . --output-dir ./reports
    
    - name: Run full MongoDB analysis
      if: github.event_name != 'pull_request'
      env:
        MONGO_CONNECTION_STRING: ${{ secrets.MONGO_CONNECTION_STRING }}
        MONGO_DATABASE: ${{ secrets.MONGO_DATABASE }}
        MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
        MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
        CI_MODE: true
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPO: ${{ github.repository }}
      run: |
        python cli.py ci-analyze --output-dir ./reports
    
    - name: Upload analysis reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: mongodb-lint-reports-${{ matrix.python-version }}
        path: reports/
        retention-days: 30
    
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Generate markdown report for PR comment
        python cli.py analyze-pr --pr-diff pr_diff.diff --format markdown --output-dir ./reports
        
        # Read the generated report and post as comment
        if [ -f "./reports/pr_analysis_*.md" ]; then
          REPORT_FILE=$(ls ./reports/pr_analysis_*.md | head -1)
          gh pr comment ${{ github.event.number }} --body-file "$REPORT_FILE"
        fi
    
    - name: Create performance issue
      if: github.event_name == 'pull_request' && failure()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create GitHub issue for failed analysis
        python -c "
        from github_integration import post_to_github
        from mongo_analyzer import MongoAnalyzer
        from report_generator import ReportGenerator
        
        try:
            with open('pr_diff.diff', 'r') as f:
                diff_content = f.read()
            
            analyzer = MongoAnalyzer()
            report = analyzer.run_pr_analysis(diff_content, '.')
            post_to_github(report, 'issue')
        except Exception as e:
            print(f'Failed to create issue: {e}')
        "
